嶋村光太郎 05-211013

動作例
    # fold_right (fun x y -> x + y) [1; 2; 3; 4] 5;;
    - : int = 15
    # fold_left (fun x y -> x * y) 10 [1; 3; 5; 7];;
    - : int = 1050

考察
    fold_rightでは、リストの末尾の要素から順に関数適用を行えばよい。
    しかし、fold_leftでは、リストの最初の要素から関数適用を行わなければ
    ならないので、アキュムレータを用意して計算した値を保持しつつ再帰を行う
    必要があり、初期値のeの部分をアキュムレータとして用いることで末尾再帰の
    形で実装を行っている。