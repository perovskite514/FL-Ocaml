嶋村光太郎 05-211013

動作例
    # append_right [1; 2] [3; 4];;
    - : int list = [1; 2; 3; 4]
    # append_left [1; 2] [3; 4];;
    - : int list = [1; 2; 3; 4]
    # filter_right [1; -1; 2; -2; 3; 5] (fun x -> x > 0);;
    - : int list = [1; 2; 3; 5]
    # filter_left [1; 2; 3; -1; -2; -3] (fun x -> x < 0);;
    - : int list = [-1; -2; -3]

考察
    問5ではリストを操作する関数をそれぞれ個別に実装しているが、
    問6ではリスト全体に何らかの作用を行う関数fold_right,fold_left
    を用いることで実装が抽象化されている。書きやすさに関しては、
    抽象化されたfold_right,fold_leftを使う方が実装の組み立てが難しく、
    特に、fold_leftを使う際にはreverse関数を利用する手段に頼ってしまった。